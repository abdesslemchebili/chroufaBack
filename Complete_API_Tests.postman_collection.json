{
  "info": {
    "name": "Pool Maintenance API - Complete Tests",
    "description": "Collection compl√®te pour tester toutes les fonctionnalit√©s de l'API de maintenance de piscines",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    },
    {
      "key": "poolId",
      "value": "",
      "type": "string"
    },
    {
      "key": "visitId",
      "value": "",
      "type": "string"
    },
    {
      "key": "taskId",
      "value": "",
      "type": "string"
    },
    {
      "key": "recordId",
      "value": "",
      "type": "string"
    },
    {
      "key": "invoiceId",
      "value": "",
      "type": "string"
    },
    {
      "key": "appointmentId",
      "value": "",
      "type": "string"
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{authToken}}",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "test",
      "script": {
        "exec": [
          "// Sauvegarde automatique des variables",
          "if (pm.response.code === 200 || pm.response.code === 201) {",
          "    const response = pm.response.json();",
          "    if (response.data && response.data._id) {",
          "        pm.collectionVariables.set('lastCreatedId', response.data._id);",
          "    }",
          "    if (response.user && response.user.id) {",
          "        pm.collectionVariables.set('userId', response.user.id);",
          "    }",
          "    if (response.token) {",
          "        pm.collectionVariables.set('authToken', response.token);",
          "    }",
          "}"
        ]
      }
    }
  ],
  "item": [
    {
      "name": "üîß Setup",
      "item": [
        {
          "name": "Create Admin User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Admin User\",\n  \"email\": \"admin@example.com\",\n  \"password\": \"admin123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/setup/admin",
              "host": ["{{baseUrl}}"],
              "path": ["api", "setup", "admin"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has success field\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('success');",
                  "    pm.expect(response.success).to.be.true;",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üîê Authentication",
      "item": [
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@example.com\",\n  \"password\": \"admin123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response contains token\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('token');",
                  "    pm.expect(response.token).to.be.a('string');",
                  "    pm.collectionVariables.set('authToken', response.token);",
                  "});",
                  "",
                  "pm.test(\"Response contains user data\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('user');",
                  "    pm.expect(response.user).to.have.property('id');",
                  "    pm.expect(response.user).to.have.property('role');",
                  "    pm.collectionVariables.set('userId', response.user.id);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Profile",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/auth/me",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "me"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response contains user profile\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('user');",
                  "    pm.expect(response.user).to.have.property('name');",
                  "    pm.expect(response.user).to.have.property('email');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Admin User\",\n  \"phone\": \"+1234567890\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "profile"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Consent",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"consentGiven\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/consent",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "consent"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üë• Admin Management",
      "item": [
        {
          "name": "Create User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test User\",\n  \"email\": \"user@example.com\",\n  \"password\": \"user123\",\n  \"role\": \"user\",\n  \"phone\": \"+1987654321\",\n  \"consentGiven\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/admin/users",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "users"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "List Users",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/admin/users",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "users"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üèä Pool Management",
      "item": [
        {
          "name": "Create Pool",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test Pool\",\n  \"owner\": \"{{userId}}\",\n  \"type\": \"residential\",\n  \"address\": \"123 Test Street\",\n  \"size\": {\n    \"value\": 500,\n    \"unit\": \"sqft\"\n  },\n  \"volume\": {\n    \"value\": 15000,\n    \"unit\": \"gallons\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/pools",
              "host": ["{{baseUrl}}"],
              "path": ["api", "pools"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response contains pool data\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('data');",
                  "    pm.expect(response.data).to.have.property('_id');",
                  "    pm.collectionVariables.set('poolId', response.data._id);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "List Pools",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/pools",
              "host": ["{{baseUrl}}"],
              "path": ["api", "pools"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Pool",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/pools/{{poolId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "pools", "{{poolId}}"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Pool",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Test Pool\",\n  \"status\": \"active\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/pools/{{poolId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "pools", "{{poolId}}"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üìÖ Visit Management",
      "item": [
        {
          "name": "Create Visit Request",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"poolId\": \"{{poolId}}\",\n  \"serviceType\": \"maintenance\",\n  \"description\": \"Regular pool maintenance\",\n  \"preferredDate\": \"2024-01-15T10:00:00.000Z\",\n  \"preferredTimeSlot\": \"morning\",\n  \"priority\": \"medium\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/visits",
              "host": ["{{baseUrl}}"],
              "path": ["api", "visits"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response contains visit data\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('data');",
                  "    pm.expect(response.data).to.have.property('_id');",
                  "    pm.collectionVariables.set('visitId', response.data._id);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "List Visits",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/visits",
              "host": ["{{baseUrl}}"],
              "path": ["api", "visits"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Approve Visit",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"scheduledDate\": \"2024-01-15T10:00:00.000Z\",\n  \"technicianId\": \"{{userId}}\",\n  \"notes\": \"Approved for maintenance\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/visits/{{visitId}}/approve",
              "host": ["{{baseUrl}}"],
              "path": ["api", "visits", "{{visitId}}", "approve"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Complete Visit",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"completionNotes\": \"Maintenance completed successfully\",\n  \"technicianId\": \"{{userId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/visits/{{visitId}}/complete",
              "host": ["{{baseUrl}}"],
              "path": ["api", "visits", "{{visitId}}", "complete"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üìã Task Management",
      "item": [
        {
          "name": "Create Task",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Test Task\",\n  \"description\": \"Test task description\",\n  \"poolId\": \"{{poolId}}\",\n  \"scheduledDate\": \"2024-01-20T10:00:00.000Z\",\n  \"priority\": \"medium\",\n  \"recurrence\": \"weekly\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/tasks",
              "host": ["{{baseUrl}}"],
              "path": ["api", "tasks"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response contains task data\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('data');",
                  "    pm.expect(response.data).to.have.property('_id');",
                  "    pm.collectionVariables.set('taskId', response.data._id);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "List Tasks",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/tasks",
              "host": ["{{baseUrl}}"],
              "path": ["api", "tasks"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Sync Tasks",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tasks\": [\n    {\n      \"title\": \"Synced Task\",\n      \"description\": \"Task synced from mobile\",\n      \"poolId\": \"{{poolId}}\",\n      \"scheduledDate\": \"2024-01-25T10:00:00.000Z\",\n      \"priority\": \"low\",\n      \"recurrence\": \"none\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/tasks/sync",
              "host": ["{{baseUrl}}"],
              "path": ["api", "tasks", "sync"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üìä Records Management",
      "item": [
        {
          "name": "Create Record",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"poolId\": \"{{poolId}}\",\n  \"taskId\": \"{{taskId}}\",\n  \"type\": \"chemical\",\n  \"description\": \"Chemical adjustment record\",\n  \"measurements\": {\n    \"chlorine\": 2.5,\n    \"pH\": 7.4,\n    \"alkalinity\": 100,\n    \"temperature\": 78\n  },\n  \"productsUsed\": [\n    {\n      \"name\": \"Chlorine Tablets\",\n      \"quantity\": 2,\n      \"unit\": \"tablets\"\n    }\n  ],\n  \"notes\": \"Chemical levels adjusted\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/records",
              "host": ["{{baseUrl}}"],
              "path": ["api", "records"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response contains record data\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('data');",
                  "    pm.expect(response.data).to.have.property('_id');",
                  "    pm.collectionVariables.set('recordId', response.data._id);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "List Records",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/records",
              "host": ["{{baseUrl}}"],
              "path": ["api", "records"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Sync Records",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"records\": [\n    {\n      \"poolId\": \"{{poolId}}\",\n      \"type\": \"cleaning\",\n      \"description\": \"Pool cleaning record\",\n      \"notes\": \"Pool cleaned and vacuumed\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/records/sync",
              "host": ["{{baseUrl}}"],
              "path": ["api", "records", "sync"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üí∞ Invoice Management",
      "item": [
        {
          "name": "Create Invoice",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"visitId\": \"{{visitId}}\",\n  \"items\": [\n    {\n      \"description\": \"Pool Maintenance Service\",\n      \"quantity\": 1,\n      \"unitPrice\": 150.00\n    },\n    {\n      \"description\": \"Chemical Treatment\",\n      \"quantity\": 2,\n      \"unitPrice\": 25.00\n    }\n  ],\n  \"tax\": 15.00,\n  \"dueDate\": \"2024-02-15T00:00:00.000Z\",\n  \"notes\": \"Thank you for your business\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/invoices",
              "host": ["{{baseUrl}}"],
              "path": ["api", "invoices"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response contains invoice data\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('data');",
                  "    pm.expect(response.data).to.have.property('_id');",
                  "    pm.collectionVariables.set('invoiceId', response.data._id);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "List Invoices",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/invoices",
              "host": ["{{baseUrl}}"],
              "path": ["api", "invoices"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Invoice Status",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"paid\",\n  \"paymentMethod\": \"credit_card\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/invoices/{{invoiceId}}/status",
              "host": ["{{baseUrl}}"],
              "path": ["api", "invoices", "{{invoiceId}}", "status"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Send Invoice Reminder",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/invoices/{{invoiceId}}/remind",
              "host": ["{{baseUrl}}"],
              "path": ["api", "invoices", "{{invoiceId}}", "remind"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üîÑ Appointment Management",
      "item": [
        {
          "name": "Create Appointment",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"poolId\": \"{{poolId}}\",\n  \"serviceType\": \"maintenance\",\n  \"frequency\": \"weekly\",\n  \"startDate\": \"2024-01-15T10:00:00.000Z\",\n  \"preferredTimeSlot\": \"morning\",\n  \"notes\": \"Weekly maintenance appointment\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/appointments",
              "host": ["{{baseUrl}}"],
              "path": ["api", "appointments"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response contains appointment data\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('data');",
                  "    pm.expect(response.data).to.have.property('_id');",
                  "    pm.collectionVariables.set('appointmentId', response.data._id);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "List Appointments",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/appointments",
              "host": ["{{baseUrl}}"],
              "path": ["api", "appointments"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Appointment Status",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"paused\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/appointments/{{appointmentId}}/status",
              "host": ["{{baseUrl}}"],
              "path": ["api", "appointments", "{{appointmentId}}", "status"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üìà Analytics",
      "item": [
        {
          "name": "Dashboard Analytics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/analytics/dashboard?startDate=2024-01-01&endDate=2024-12-31",
              "host": ["{{baseUrl}}"],
              "path": ["api", "analytics", "dashboard"],
              "query": [
                {
                  "key": "startDate",
                  "value": "2024-01-01"
                },
                {
                  "key": "endDate",
                  "value": "2024-12-31"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response contains analytics data\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('data');",
                  "    pm.expect(response.data).to.have.property('overview');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Client Analytics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/analytics/clients",
              "host": ["{{baseUrl}}"],
              "path": ["api", "analytics", "clients"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Technician Analytics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/analytics/technicians",
              "host": ["{{baseUrl}}"],
              "path": ["api", "analytics", "technicians"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Revenue Analytics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/analytics/revenue",
              "host": ["{{baseUrl}}"],
              "path": ["api", "analytics", "revenue"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üîß Troubleshooting",
      "item": [
        {
          "name": "List Troubleshooting Guides",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/troubleshooting",
              "host": ["{{baseUrl}}"],
              "path": ["api", "troubleshooting"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Search Troubleshooting Guides",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/troubleshooting?search=chlorine&category=chemical",
              "host": ["{{baseUrl}}"],
              "path": ["api", "troubleshooting"],
              "query": [
                {
                  "key": "search",
                  "value": "chlorine"
                },
                {
                  "key": "category",
                  "value": "chemical"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "‚ùå Error Tests",
      "item": [
        {
          "name": "Invalid Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"invalid@example.com\",\n  \"password\": \"wrongpassword\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 401\", function () {",
                  "    pm.response.to.have.status(401);",
                  "});",
                  "",
                  "pm.test(\"Response contains error message\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('success');",
                  "    pm.expect(response.success).to.be.false;",
                  "    pm.expect(response).to.have.property('message');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Unauthorized Access",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/admin/users",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "users"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 401 or 403\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([401, 403]);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Invalid Pool Data",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"\",\n  \"userId\": \"invalid-id\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/pools",
              "host": ["{{baseUrl}}"],
              "path": ["api", "pools"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    }
  ]
} 