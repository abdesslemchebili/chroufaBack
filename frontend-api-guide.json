{
  "api": {
    "baseUrl": "http://localhost:3000/api",
    "documentation": "http://localhost:3000/api-docs",
    "version": "2.0.0"
  },
  "authentication": {
    "type": "Bearer Token",
    "header": "Authorization: Bearer <token>",
    "expiration": "30 days",
    "endpoints": {
      "login": {
        "method": "POST",
        "url": "/api/auth/login",
        "body": {
          "username": "string (required)",
          "password": "string (required)"
        },
        "response": {
          "success": "boolean",
          "token": "string",
          "user": {
            "id": "string",
            "name": "string",
            "username": "string",
            "email": "string (optional)",
            "role": "string"
          }
        }
      },
      "profile": {
        "method": "GET",
        "url": "/api/auth/me",
        "headers": {
          "Authorization": "Bearer <token>"
        },
        "response": {
          "success": "boolean",
          "user": {
            "id": "string",
            "name": "string",
            "username": "string",
            "email": "string (optional)",
            "role": "string"
          }
        }
      },
      "changePassword": {
        "method": "PUT",
        "url": "/api/auth/change-password",
        "headers": {
          "Authorization": "Bearer <token>"
        },
        "body": {
          "currentPassword": "string (required)",
          "newPassword": "string (required)"
        },
        "response": {
          "success": "boolean",
          "message": "string"
        }
      }
    }
  },
  "userRoles": {
    "user": "Utilisateur standard",
    "admin": "Administrateur (accès complet)"
  },
  "userProfile": {
    "structure": {
      "id": "string",
      "name": "string",
      "username": "string (required, unique)",
      "email": "string (optional, unique)",
      "role": "user | admin",
      "phone": "string (encrypted)",
      "consentGiven": "boolean",
      "consentDate": "Date",
      "lastSyncTimestamp": "Date"
    }
  },
  "setup": {
    "endpoints": {
      "createAdmin": {
        "method": "POST",
        "url": "/api/setup/admin",
        "body": {
          "name": "string (required)",
          "username": "string (required, 3-30 chars, letters/numbers/underscores)",
          "email": "string (optional)",
          "password": "string (required)"
        },
        "response": {
          "success": "boolean",
          "message": "string",
          "data": "object"
        }
      }
    }
  },
  "admin": {
    "endpoints": {
      "createUser": {
        "method": "POST",
        "url": "/api/admin/users",
        "headers": {
          "Authorization": "Bearer <token>"
        },
        "body": {
          "name": "string (required)",
          "username": "string (required, 3-30 chars, letters/numbers/underscores)",
          "email": "string (optional)",
          "password": "string (required)",
          "role": "user | admin (optional, default: user)",
          "phone": "string (optional)",
          "consentGiven": "boolean (optional, default: false)"
        }
      },
      "listUsers": {
        "method": "GET",
        "url": "/api/admin/users",
        "headers": {
          "Authorization": "Bearer <token>"
        }
      },
      "deleteUser": {
        "method": "DELETE",
        "url": "/api/admin/users/:id",
        "headers": {
          "Authorization": "Bearer <token>"
        }
      }
    }
  },
  "pools": {
    "types": {
      "residential": "Résidentielle",
      "commercial": "Commerciale",
      "public": "Publique"
    },
    "status": {
      "active": "Active",
      "inactive": "Inactive",
      "maintenance": "En maintenance"
    },
    "address": "string",
    "owner": "string (User ID)",
    "type": "residential | commercial | public",
    "size": {
      "value": "number (optional)",
      "unit": "sqft | sqm (optional, default: sqft)"
    },
    "volume": {
      "value": "number (optional)",
      "unit": "gallons | liters (optional, default: gallons)"
    },
    "endpoints": {
      "list": {
        "method": "GET",
        "url": "/api/pools",
        "headers": {
          "Authorization": "Bearer <token>"
        }
      },
      "create": {
        "method": "POST",
        "url": "/api/pools",
        "headers": {
          "Authorization": "Bearer <token>"
        },
        "body": {
          "name": "string (required)",
          "address": "string (required)",
          "owner": "string (required, User ID)",
          "type": "string (required)",
          "size": "object (optional)",
          "volume": "object (optional)"
        }
      },
      "get": {
        "method": "GET",
        "url": "/api/pools/:id",
        "headers": {
          "Authorization": "Bearer <token>"
        }
      },
      "update": {
        "method": "PUT",
        "url": "/api/pools/:id",
        "headers": {
          "Authorization": "Bearer <token>"
        },
        "body": {
          "name": "string (optional)",
          "address": "string (optional)",
          "type": "string (optional)",
          "size": "object (optional)",
          "volume": "object (optional)",
          "status": "string (optional)"
        }
      },
      "delete": {
        "method": "DELETE",
        "url": "/api/pools/:id",
        "headers": {
          "Authorization": "Bearer <token>"
        }
      },
      "updateStatus": {
        "method": "PUT",
        "url": "/api/pools/:id/status",
        "headers": {
          "Authorization": "Bearer <token>"
        },
        "body": {
          "status": "active | inactive | maintenance"
        }
      }
    }
  },
  "visits": {
    "status": {
      "pending": "En attente",
      "approved": "Approuvée",
      "declined": "Refusée",
      "rescheduled": "Reprogrammée",
      "completed": "Terminée",
      "cancelled": "Annulée"
    },
    "priorities": {
      "low": "Faible",
      "medium": "Moyenne",
      "high": "Haute",
      "urgent": "Urgente"
    },
    "timeSlots": {
      "morning": "Matin",
      "afternoon": "Après-midi",
      "evening": "Soir",
      "any": "N'importe quand"
    },
    "endpoints": {
      "list": {
        "method": "GET",
        "url": "/api/visits",
        "headers": {
          "Authorization": "Bearer <token>"
        },
        "query": {
          "status": "string (optional)",
          "poolId": "string (optional)",
          "startDate": "string (optional)",
          "endDate": "string (optional)",
          "page": "number (optional)",
          "limit": "number (optional)"
        }
      },
      "create": {
        "method": "POST",
        "url": "/api/visits",
        "headers": {
          "Authorization": "Bearer <token>"
        },
        "body": {
          "poolId": "string (required)",
          "requestedDate": "string (required, ISO date)",
          "preferredTimeSlot": "morning | afternoon | evening | any (optional, default: any)",
          "reason": "string (required, 5-500 chars)",
          "description": "string (optional, max 1000 chars)",
          "priority": "low | medium | high | urgent (optional, default: medium)",
          "contactPhone": "string (optional)",
          "contactEmail": "string (optional)",
          "specialInstructions": "string (optional)"
        }
      },
      "get": {
        "method": "GET",
        "url": "/api/visits/:id",
        "headers": {
          "Authorization": "Bearer <token>"
        }
      },
      "update": {
        "method": "PUT",
        "url": "/api/visits/:id",
        "headers": {
          "Authorization": "Bearer <token>"
        },
        "body": {
          "description": "string (optional)",
          "priority": "string (optional)",
          "specialInstructions": "string (optional)"
        }
      },
      "delete": {
        "method": "DELETE",
        "url": "/api/visits/:id",
        "headers": {
          "Authorization": "Bearer <token>"
        }
      },
      "approve": {
        "method": "PUT",
        "url": "/api/visits/:id/approve",
        "headers": {
          "Authorization": "Bearer <token>"
        },
        "body": {
          "scheduledDate": "string (required, ISO date)",
          "scheduledTimeSlot": "morning | afternoon | evening (required)",
          "assignedTechnician": "string (optional, User ID)",
          "estimatedDuration": "number (optional, 15-480 minutes)",
          "adminNotes": "string (optional, max 1000 chars)"
        }
      },
      "decline": {
        "method": "PUT",
        "url": "/api/visits/:id/decline",
        "headers": {
          "Authorization": "Bearer <token>"
        },
        "body": {
          "declineReason": "string (required, 5-500 chars)"
        }
      },
      "reschedule": {
        "method": "PUT",
        "url": "/api/visits/:id/reschedule",
        "headers": {
          "Authorization": "Bearer <token>"
        },
        "body": {
          "scheduledDate": "string (required, ISO date)",
          "scheduledTimeSlot": "morning | afternoon | evening (required)",
          "rescheduleReason": "string (required, 5-500 chars)"
        }
      },
      "complete": {
        "method": "PUT",
        "url": "/api/visits/:id/complete",
        "headers": {
          "Authorization": "Bearer <token>"
        }
      },
      "cancel": {
        "method": "PUT",
        "url": "/api/visits/:id/cancel",
        "headers": {
          "Authorization": "Bearer <token>"
        }
      },
      "stats": {
        "method": "GET",
        "url": "/api/visits/stats",
        "headers": {
          "Authorization": "Bearer <token>"
        },
        "query": {
          "startDate": "string (optional)",
          "endDate": "string (optional)"
        }
      }
    }
  },
  "tasks": {
    "priorities": {
      "low": "Faible",
      "medium": "Moyenne",
      "high": "Haute"
    },
    "recurrence": {
      "none": "Aucune",
      "daily": "Quotidienne",
      "weekly": "Hebdomadaire",
      "biweekly": "Bi-hebdomadaire",
      "monthly": "Mensuelle"
    },
    "endpoints": {
      "list": {
        "method": "GET",
        "url": "/api/tasks",
        "headers": {
          "Authorization": "Bearer <token>"
        }
      },
      "create": {
        "method": "POST",
        "url": "/api/tasks",
        "headers": {
          "Authorization": "Bearer <token>"
        },
        "body": {
          "title": "string (required)",
          "poolId": "string (required)",
          "scheduledDate": "string (required, ISO date)",
          "priority": "low | medium | high (optional)",
          "recurrence": "none | daily | weekly | biweekly | monthly (optional)"
        }
      },
      "get": {
        "method": "GET",
        "url": "/api/tasks/:id",
        "headers": {
          "Authorization": "Bearer <token>"
        }
      },
      "update": {
        "method": "PUT",
        "url": "/api/tasks/:id",
        "headers": {
          "Authorization": "Bearer <token>"
        },
        "body": {
          "title": "string (optional)",
          "description": "string (optional)",
          "scheduledDate": "string (optional)",
          "priority": "string (optional)",
          "recurrence": "string (optional)"
        }
      },
      "delete": {
        "method": "DELETE",
        "url": "/api/tasks/:id",
        "headers": {
          "Authorization": "Bearer <token>"
        }
      },
      "complete": {
        "method": "PUT",
        "url": "/api/tasks/:id/complete",
        "headers": {
          "Authorization": "Bearer <token>"
        }
      },
      "sync": {
        "method": "POST",
        "url": "/api/tasks/sync",
        "headers": {
          "Authorization": "Bearer <token>"
        },
        "body": {
          "tasks": "array of task objects"
        }
      }
    }
  },
  "records": {
    "types": {
      "chemical": "Chimique",
      "cleaning": "Nettoyage",
      "repair": "Réparation",
      "inspection": "Inspection",
      "other": "Autre"
    },
    "endpoints": {
      "list": {
        "method": "GET",
        "url": "/api/records",
        "headers": {
          "Authorization": "Bearer <token>"
        }
      },
      "create": {
        "method": "POST",
        "url": "/api/records",
        "headers": {
          "Authorization": "Bearer <token>"
        },
        "body": {
          "poolId": "string (required)",
          "type": "chemical | cleaning | repair | inspection | other (required)",
          "description": "string (required)",
          "measurements": {
            "chlorine": "number (optional)",
            "pH": "number (optional)",
            "alkalinity": "number (optional)",
            "temperature": "number (optional)"
          },
          "productsUsed": [
            {
              "name": "string (required)",
              "quantity": "number (required)",
              "unit": "string (required)"
            }
          ],
          "notes": "string (optional)"
        }
      },
      "get": {
        "method": "GET",
        "url": "/api/records/:id",
        "headers": {
          "Authorization": "Bearer <token>"
        }
      },
      "update": {
        "method": "PUT",
        "url": "/api/records/:id",
        "headers": {
          "Authorization": "Bearer <token>"
        },
        "body": {
          "description": "string (optional)",
          "measurements": "object (optional)",
          "productsUsed": "array (optional)",
          "notes": "string (optional)"
        }
      },
      "delete": {
        "method": "DELETE",
        "url": "/api/records/:id",
        "headers": {
          "Authorization": "Bearer <token>"
        }
      },
      "sync": {
        "method": "POST",
        "url": "/api/records/sync",
        "headers": {
          "Authorization": "Bearer <token>"
        },
        "body": {
          "records": "array of record objects"
        }
      }
    }
  },
  "invoices": {
    "status": {
      "draft": "Brouillon",
      "sent": "Envoyée",
      "paid": "Payée",
      "overdue": "En retard",
      "cancelled": "Annulée"
    },
    "paymentMethods": {
      "cash": "Espèces",
      "credit_card": "Carte de crédit",
      "bank_transfer": "Virement bancaire",
      "check": "Chèque"
    },
    "endpoints": {
      "list": {
        "method": "GET",
        "url": "/api/invoices",
        "headers": {
          "Authorization": "Bearer <token>"
        }
      },
      "create": {
        "method": "POST",
        "url": "/api/invoices",
        "headers": {
          "Authorization": "Bearer <token>"
        },
        "body": {
          "visitId": "string (required)",
          "items": [
            {
              "description": "string (required)",
              "quantity": "number (required)",
              "unitPrice": "number (required)"
            }
          ],
          "tax": "number (optional)",
          "dueDate": "string (required, ISO date)",
          "notes": "string (optional)"
        }
      },
      "get": {
        "method": "GET",
        "url": "/api/invoices/:id",
        "headers": {
          "Authorization": "Bearer <token>"
        }
      },
      "updateStatus": {
        "method": "PUT",
        "url": "/api/invoices/:id/status",
        "headers": {
          "Authorization": "Bearer <token>"
        },
        "body": {
          "status": "draft | sent | paid | overdue | cancelled",
          "paymentMethod": "cash | credit_card | bank_transfer | check (optional)"
        }
      },
      "stats": {
        "method": "GET",
        "url": "/api/invoices/stats",
        "headers": {
          "Authorization": "Bearer <token>"
        },
        "query": {
          "startDate": "string (optional)",
          "endDate": "string (optional)"
        }
      },
      "sendReminder": {
        "method": "POST",
        "url": "/api/invoices/:id/remind",
        "headers": {
          "Authorization": "Bearer <token>"
        }
      }
    }
  },
  "appointments": {
    "status": {
      "active": "Active",
      "paused": "En pause",
      "cancelled": "Annulée"
    },
    "serviceTypes": {
      "maintenance": "Maintenance",
      "cleaning": "Nettoyage",
      "inspection": "Inspection",
      "repair": "Réparation"
    },
    "frequency": {
      "weekly": "Hebdomadaire",
      "biweekly": "Bi-hebdomadaire",
      "monthly": "Mensuelle",
      "quarterly": "Trimestrielle"
    },
    "endpoints": {
      "list": {
        "method": "GET",
        "url": "/api/appointments",
        "headers": {
          "Authorization": "Bearer <token>"
        }
      },
      "create": {
        "method": "POST",
        "url": "/api/appointments",
        "headers": {
          "Authorization": "Bearer <token>"
        },
        "body": {
          "poolId": "string (required)",
          "serviceType": "maintenance | cleaning | inspection | repair (required)",
          "frequency": "weekly | biweekly | monthly | quarterly (required)",
          "startDate": "string (required, ISO date)",
          "preferredTimeSlot": "morning | afternoon | evening (optional)",
          "notes": "string (optional)"
        }
      },
      "get": {
        "method": "GET",
        "url": "/api/appointments/:id",
        "headers": {
          "Authorization": "Bearer <token>"
        }
      },
      "update": {
        "method": "PUT",
        "url": "/api/appointments/:id",
        "headers": {
          "Authorization": "Bearer <token>"
        },
        "body": {
          "serviceType": "string (optional)",
          "frequency": "string (optional)",
          "preferredTimeSlot": "string (optional)",
          "notes": "string (optional)"
        }
      },
      "updateStatus": {
        "method": "PUT",
        "url": "/api/appointments/:id/status",
        "headers": {
          "Authorization": "Bearer <token>"
        },
        "body": {
          "status": "active | paused | cancelled"
        }
      },
      "delete": {
        "method": "DELETE",
        "url": "/api/appointments/:id",
        "headers": {
          "Authorization": "Bearer <token>"
        }
      },
      "getClientAppointments": {
        "method": "GET",
        "url": "/api/appointments/client/:clientId",
        "headers": {
          "Authorization": "Bearer <token>"
        }
      },
      "getTechnicianAppointments": {
        "method": "GET",
        "url": "/api/appointments/technician/:technicianId",
        "headers": {
          "Authorization": "Bearer <token>"
        }
      },
      "getAvailableTechnicians": {
        "method": "GET",
        "url": "/api/appointments/technicians",
        "headers": {
          "Authorization": "Bearer <token>"
        }
      }
    }
  },
  "analytics": {
    "endpoints": {
      "dashboard": {
        "method": "GET",
        "url": "/api/analytics/dashboard",
        "headers": {
          "Authorization": "Bearer <token>"
        },
        "query": {
          "startDate": "string (optional)",
          "endDate": "string (optional)"
        }
      },
      "clients": {
        "method": "GET",
        "url": "/api/analytics/clients",
        "headers": {
          "Authorization": "Bearer <token>"
        }
      },
      "technicians": {
        "method": "GET",
        "url": "/api/analytics/technicians",
        "headers": {
          "Authorization": "Bearer <token>"
        }
      },
      "revenue": {
        "method": "GET",
        "url": "/api/analytics/revenue",
        "headers": {
          "Authorization": "Bearer <token>"
        }
      }
    }
  },
  "troubleshooting": {
    "categories": {
      "water-quality": "Qualité de l'eau",
      "equipment": "Équipement",
      "cleaning": "Nettoyage",
      "general": "Général"
    },
    "endpoints": {
      "list": {
        "method": "GET",
        "url": "/api/troubleshooting",
        "headers": {
          "Authorization": "Bearer <token>"
        },
        "query": {
          "search": "string (optional)",
          "category": "string (optional)"
        }
      },
      "get": {
        "method": "GET",
        "url": "/api/troubleshooting/:id",
        "headers": {
          "Authorization": "Bearer <token>"
        }
      },
      "update": {
        "method": "PUT",
        "url": "/api/troubleshooting/:id",
        "headers": {
          "Authorization": "Bearer <token>"
        },
        "body": {
          "title": "string (optional)",
          "description": "string (optional)",
          "category": "string (optional)",
          "steps": "array (optional)"
        }
      },
      "delete": {
        "method": "DELETE",
        "url": "/api/troubleshooting/:id",
        "headers": {
          "Authorization": "Bearer <token>"
        }
      }
    }
  },
  "errorResponses": {
    "400": {
      "description": "Bad Request - Données invalides",
      "example": {
        "success": false,
        "message": "Validation error",
        "errors": []
      }
    },
    "401": {
      "description": "Unauthorized - Token manquant ou invalide",
      "example": {
        "success": false,
        "message": "Not authorized to access this route"
      }
    },
    "403": {
      "description": "Forbidden - Accès refusé (rôle insuffisant)",
      "example": {
        "success": false,
        "message": "Not authorized as admin"
      }
    },
    "404": {
      "description": "Not Found - Ressource introuvable",
      "example": {
        "success": false,
        "message": "Resource not found"
      }
    },
    "500": {
      "description": "Internal Server Error - Erreur serveur",
      "example": {
        "success": false,
        "message": "Server error"
      }
    }
  },
  "pagination": {
    "description": "Les endpoints de liste supportent la pagination",
    "queryParameters": {
      "page": "number (default: 1)",
      "limit": "number (default: 10, max: 100)"
    },
    "response": {
      "data": "array",
      "pagination": {
        "currentPage": "number",
        "totalPages": "number",
        "totalItems": "number",
        "hasNextPage": "boolean",
        "hasPrevPage": "boolean"
      }
    }
  },
  "validation": {
    "username": "3-30 caractères, lettres, chiffres et underscores uniquement",
    "password": "Aucune contrainte de longueur minimale",
    "email": "Format email valide, optionnel",
    "phone": "Format international recommandé (+1234567890)",
    "dates": "Format ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ)"
  }
} 